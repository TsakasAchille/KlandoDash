@startuml
actor "Utilisateur" as User
participant "Navigateur" as Browser
participant "Application KlandoDash" as Dash
participant "Serveur Flask" as Flask
participant "Module OAuth" as OAuth
participant "Google Auth" as Google

User -> Browser: Accède à l'application
Browser -> Dash: Requête GET /
Dash -> Flask: Intercepte la requête
Flask -> User: Redirige vers /login (si non authentifié)

User -> Browser: Clique sur "Se connecter avec Google"
Browser -> Dash: Requête GET /auth/login
Dash -> OAuth: google_login()
OAuth -> OAuth: Génère state (secrets.token_hex)
OAuth -> OAuth: Stocke state dans la session
OAuth -> Google: authorize_redirect(redirect_uri)
Google -> Browser: Affiche la page de consentement Google

User -> Google: S'authentifie et autorise l'application
Google -> Browser: Redirige vers redirect_uri avec code auth
Browser -> Dash: Requête GET /auth/login/google/callback?code=...&state=...
Dash -> OAuth: google_callback()
OAuth -> Google: authorize_access_token()
Google -> OAuth: Renvoie access_token
OAuth -> Google: Requête GET userinfo
Google -> OAuth: Renvoie informations utilisateur (email, nom, photo)

alt Email autorisé
    OAuth -> Flask: Crée objet User
    OAuth -> Flask: login_user(user)
    OAuth -> Flask: Stocke informations dans la session
    Flask -> Browser: Redirige vers /
    Browser -> User: Affiche la page principale
else Email non autorisé
    OAuth -> Flask: flash("Erreur d'authentification")
    Flask -> Browser: Redirige vers /login
    Browser -> User: Affiche message d'erreur
end

User -> Browser: Clique sur "Déconnexion"
Browser -> Dash: Requête GET /logout
Dash -> OAuth: logout()
OAuth -> Flask: logout_user()
OAuth -> Flask: Supprime les données de session
Flask -> Browser: Redirige vers /login
Browser -> User: Affiche la page de connexion
@enduml